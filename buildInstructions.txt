StationPlaylist Studio add-on build instructions

Last updated: August 17, 2018 (Joseph Lee)

Thank you for your interest in helping out with Studio add-on development, specifically building the add-on for testing purposes.

There are two ways of building the add-on: manual or automated. Manual bundling is useful if you'd like to build the add-on bundle but do not wish to install extra software and wish to work with source code directly, whereas automated build is useful for publishing the add-on to websites and includes interface translations and documentation.

Manual bundling: From the source code directory, open "addon" folder and create a text file named "manifest.ini". Alternatively, copy manifest.ini.tpl into "addon" folderand rename it to "manifest.ini". Then fill out the manifest file (be sure to quote strings). Once the manifest file is ready, zip the entire contents of the "addon" folder as a zip file, naming this whatever you want with the extension of .nvda-addon.

Automated bundling: To use this method, install Python 2.7 (www.python.org), Markdown, Gettext binaries for Windows and SCons (www.scons.org). Install Python (if you haven't), then install SCons and Markdown, and put the Gettext binaries at the root directory of the source code repository. Then run SCons from the command prompt shell (Windows Command Prompt (cmd.exe), Cygwin, etc.). If everything is working, after some progress messages, SPL add-on installer (stationPlaylist-version.nvda-addon) will be created.

To customize automated bundling variables, modify buildVars.py. The build variables dictionary allows you to control the same variables as manifest method above (name, description, version and so on).

To customize additional build options while building the bundle from command shells, type the following:

* scons dev (default is false): This appends build date to the version string, useful if you are building snapshot releases. This has no effect if version switch with a custom version string is specified.
* scons version: Specify the version to be used (overrides buildVars dictionary).

Lastly, to clean the build, type "scons --clean".

Enjoy the add-on.